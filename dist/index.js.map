{"version":3,"file":"index.js","sources":["../src/components/RangeInput.tsx","../src/components/HanjiSlider.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\n\ninterface RangeInputProps {\n  min: number;\n  max: number;\n  value: number;\n  onChange: (value: number) => void;\n  isDragging: boolean;\n  setIsDragging: (value: boolean) => void;\n  separatorColor?: string;\n}\n\nconst RangeInput: React.FC<RangeInputProps> = ({\n  isDragging,\n  setIsDragging,\n  min,\n  max,\n  value,\n  onChange,\n  separatorColor = \"#fff\",\n}) => {\n  const sliderRef = useRef<HTMLButtonElement>(null);\n\n  const handleMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging || sliderRef.current === null) {\n      return;\n    }\n\n    const clientX =\n      event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n\n    const rect = sliderRef.current.getBoundingClientRect();\n    let newValue =\n      ((clientX - rect.left) / rect.width) * (max - min) + min;\n\n    newValue = Math.max(Math.min(newValue, max), min);\n\n    onChange(Math.round(newValue));\n  };\n\n  const handleDown = (event: React.MouseEvent | React.TouchEvent): void => {\n    setIsDragging(true);\n\n    if (event.type === \"mousedown\" || event.type === \"touchstart\") {\n      handleMove(event.nativeEvent);\n    }\n  };\n\n  const handleUp = (): void => {\n    setIsDragging(false);\n  };\n\n  React.useEffect(() => {\n    const handleMoveTouch = (event: TouchEvent): void => {\n      handleMove(event);\n    };\n\n    window.addEventListener(\"mousemove\", handleMove);\n    window.addEventListener(\"mouseup\", handleUp);\n    window.addEventListener(\"touchmove\", handleMoveTouch);\n    window.addEventListener(\"touchend\", handleUp);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMove);\n      window.removeEventListener(\"mouseup\", handleUp);\n      window.removeEventListener(\"touchmove\", handleMoveTouch);\n      window.removeEventListener(\"touchend\", handleUp);\n    };\n  }, [isDragging]);\n\n  const styles: Record<string, React.CSSProperties> = {\n    root: {\n      height: 0,\n      width: \"100%\",\n      border: 0,\n      padding: 0,\n      transition: \"opacity 0.3s\",\n      ...(isDragging && {\n        opacity: 0.3,\n      }),\n    },\n    thumb: {\n      position: \"absolute\",\n      top: 0,\n      height: \"100%\",\n      width: \"16px\",\n      transform: \"translateX(-50%)\",\n      cursor: \"col-resize\",\n      left: `${((value - min) / (max - min)) * 100}%`,\n    },\n    line: {\n      height: \"100%\",\n      width: \"1px\",\n      background: separatorColor,\n      marginLeft: \"8px\",\n      display: \"grid\",\n      alignItems: \"center\",\n    },\n    arrowPrimary: {\n      display: \"inline-block\",\n      width: \"10px\",\n      height: \"10px\",\n      transform: \"rotate(45deg)\",\n      gridArea: \"1/1\",\n      borderBottom: `1px solid ${separatorColor}`,\n      borderLeft: `1px solid ${separatorColor}`,\n      marginLeft: \"-11px\",\n    },\n    arrowSecondary: {\n      display: \"inline-block\",\n      width: \"10px\",\n      height: \"10px\",\n      gridArea: \"1/1\",\n      borderBottom: `1px solid ${separatorColor}`,\n      borderLeft: `1px solid ${separatorColor}`,\n      transform: \"rotate(-135deg)\",\n      marginLeft: \"1px\",\n    },\n  };\n\n  return (\n    <button\n      ref={sliderRef}\n      onMouseDown={handleDown}\n      onTouchStart={handleDown}\n      style={styles.root}\n    >\n      <div style={styles.thumb}>\n        <div style={styles.line}>\n          <div style={styles.arrowPrimary} />\n          <div style={styles.arrowSecondary} />\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default RangeInput;\n","import * as React from \"react\";\nimport RangeInput from \"./RangeInput\";\nconst { useState } = React;\n\ninterface HanjiSliderProps {\n  slidePrimary: React.ReactElement\n  stylePrimary?: Record<string, unknown>,\n  slideSecondary: React.ReactElement\n  styleSecondary?: Record<string, unknown>,\n  defaultPercentage?: number\n  styleWrap?: Record<string, unknown>,\n  separatorColor?: string\n}\n\nexport const ReactHanjiSlider = ({\n  defaultPercentage = 50,\n  styleWrap,\n  slidePrimary,\n  stylePrimary,\n  slideSecondary,\n  styleSecondary,\n  separatorColor\n}: HanjiSliderProps): React.ReactElement => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [percentage, setPercentage] = useState(defaultPercentage)\n\n  const handleSliderChange = (value: number): void => {\n    setPercentage(value)\n  };\n\n  const percentagePrimary: React.CSSProperties = {\n    '--percentage': `${percentage}%`\n  } as React.CSSProperties;\n\n  const percentageSecondary: React.CSSProperties = {\n    '--percentage': `${100 - percentage}%`\n  } as React.CSSProperties;\n\n  const styles: Record<string, React.CSSProperties> = {\n    root: {\n      position: 'relative',\n      display: 'grid',\n      ...(isDragging && {\n        WebkitTouchCallout: 'none',\n        WebkitUserSelect: 'none',\n        KhtmlUserSelect: 'none',\n        MozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n      }),\n      ...styleWrap\n    },\n    secondary: {\n      overflow: 'auto',\n      width: '100%',\n      gridArea: '1 / 1',\n      clipPath: `polygon(var(--percentage) 0%, 100% 0%, 100% 100%, var(--percentage) 100%)`,\n      ...percentageSecondary,\n      ...styleSecondary\n    },\n    primary: {\n      overflow: 'auto',\n      width: '100%',\n      gridArea: '1 / 1',\n      ...percentagePrimary,\n      ...stylePrimary\n    },\n  }\n\n  return (\n    <div style={styles.root}>\n      <div style={styles.primary}>\n        {slidePrimary}\n      </div>\n      <div style={styles.secondary}>\n        {slideSecondary}\n      </div>\n      <RangeInput\n        isDragging={isDragging}\n        setIsDragging={setIsDragging}\n        min={0}\n        max={100}\n        value={percentage}\n        onChange={handleSliderChange}\n        separatorColor={separatorColor} />\n    </div >\n  )\n}\n\nReactHanjiSlider.displayName = \"ReactHanjiSlider\";\n"],"names":["useRef","React"],"mappings":"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"}